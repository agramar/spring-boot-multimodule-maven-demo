version: "3.2"

services:
  mariadb:
    build:
      context: mariadb/
      args:
        MARIADB_VERSION: $MARIADB_VERSION
    ports:
      - 3306:3306
    volumes:
      - ./mariadb/conf.d:/etc/mysql/conf.d
      - ./mariadb/initdb.d:/docker-entrypoint-initdb.d
      - ./mariadb/data:/var/lib/mysql
    env_file: .env
    environment:
      MYSQL_HOST: localhost
      MYSQL_PORT: 3306
      MYSQL_ROOT_PASSWORD: root0!
      MYSQL_DATABASE: agramar
      MYSQL_USER: agramar
      MYSQL_PASSWORD: agramar0!
      TZ: Asia/Seoul
    networks:
      - backend

  redis:
    image: redis:$REDIS_VERSION
    command: redis-server --requirepass changeme --port 6379
    ports:
      - 6379:6379
    networks:
      - backend

  zoo1:
    image: zookeeper:$ZK_VERSION
    hostname: zoo1
    ports:
      - 2181:2181
    environment:
      ZOO_MY_ID: 1
      ZOO_PORT: 2181
      ZOO_SERVERS: server.1=zoo1:2888:3888
#    volumes:
#      - ./zk-single-kafka-single/zoo1/data:/data
#      - ./zk-single-kafka-single/zoo1/datalog:/datalog
    networks:
      - backend

  kafka1:
    image: confluentinc/cp-kafka:$KAFKA_VERSION
    hostname: kafka1
    ports:
      - 9092:9092
      - 9999:9999
    environment:
      KAFKA_ADVERTISED_LISTENERS: LISTENER_DOCKER_INTERNAL://kafka1:19092,LISTENER_DOCKER_EXTERNAL://${DOCKER_HOST_IP:-127.0.0.1}:9092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: LISTENER_DOCKER_INTERNAL:PLAINTEXT,LISTENER_DOCKER_EXTERNAL:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: LISTENER_DOCKER_INTERNAL
      KAFKA_ZOOKEEPER_CONNECT: zoo1:2181
      KAFKA_BROKER_ID: 1
      KAFKA_LOG4J_LOGGERS: "kafka.controller=INFO,kafka.producer.async.DefaultEventHandler=INFO,state.change.logger=INFO"
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
      KAFKA_JMX_PORT: 9999
      KAFKA_JMX_HOSTNAME: ${DOCKER_HOST_IP:-127.0.0.1}
#    volumes:
#      - ./zk-single-kafka-single/kafka1/data:/var/lib/kafka/data
    depends_on:
      - zoo1
    networks:
      - backend

networks:
  backend:
    driver: bridge
